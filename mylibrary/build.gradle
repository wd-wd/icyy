apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.core:core-ktx:1.3.2'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    api rootProject.ext.dependencies.retrofit
    api rootProject.ext.dependencies.retrofit_adapter_rxjava2
    api rootProject.ext.dependencies.retrofit_converter_gson
    api rootProject.ext.dependencies.gson
    api rootProject.ext.dependencies.rxjava2
    api rootProject.ext.dependencies.rxjava2_android
    api rootProject.ext.dependencies.kotlinx_coroutines_core
    api rootProject.ext.dependencies.kotlinx_coroutines_android

    api "androidx.fragment:fragment-ktx:1.1.0"
    api "androidx.activity:activity-ktx:1.1.0"
    def lifecycle_version = "2.2.0"
// ViewModel
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
//    // LiveData
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
//    // Lifecycles only (without ViewModel or LiveData)
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    api 'androidx.lifecycle:lifecycle-process:2.2.0'
    api rootProject.ext.dependencies.arouter_api
//JAVA
    api 'androidx.navigation:navigation-fragment:2.3.0'
    api 'androidx.navigation:navigation-ui:2.3.0'
    //KOTLIN
    api 'androidx.navigation:navigation-fragment-ktx:2.3.0'
    api 'androidx.navigation:navigation-ui-ktx:2.3.0'
    api "androidx.recyclerview:recyclerview:1.1.0"
    api 'com.github.CymChad:BaseRecyclerViewAdapterHelper:3.0.4'
    // glide
    api 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //引入GSYVideoPlayer实现视频播放，根据此sdk的接入步骤我选择的是B，可看github文档
    api 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-java:v8.1.3-jitpack'

    //是否需要ExoPlayer模式
    api 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-exo_player2:v8.1.3-jitpack'

    //根据你的需求ijk模式的so  并没有用x86的
    api 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv64:v8.1.3-jitpack'
    api 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv7a:v8.1.3-jitpack'
    api 'com.github.CarGuo.GSYVideoPlayer:gsyVideoPlayer-armv5:v8.1.3-jitpack'

    //mmkv
    api rootProject.ext.dependencies.mmkv
}